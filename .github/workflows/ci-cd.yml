name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 0' # Weekly security scan

env:
  FLUTTER_VERSION: '3.7.2'
  JAVA_VERSION: '11'

jobs:
  # 🔍 Code Quality and Security Analysis
  analyze:
    name: 🔍 Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: ✅ Verify Formatting
        run: dart format --output=none --set-exit-if-changed .
        
      - name: 🔍 Analyze Code
        run: flutter analyze
        
      - name: 🔒 Security Audit
        run: |
          dart pub deps --style=list | grep -E "^\s*[a-zA-Z0-9_]+" | cut -d' ' -f1 > dependencies.txt
          # Add security scanning tools here
          
      - name: 📊 Upload Analysis Results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: results.sarif

  # 🧪 Unit and Widget Tests
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [unit, widget, integration]
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: 🧪 Run Tests
        run: |
          if [ "${{ matrix.test-type }}" == "unit" ]; then
            flutter test test/unit/
          elif [ "${{ matrix.test-type }}" == "widget" ]; then
            flutter test test/widget/
          else
            flutter test test/integration/
          fi
        
      - name: 📈 Generate Coverage
        if: matrix.test-type == 'unit'
        run: |
          flutter test --coverage
          genhtml coverage/lcov.info -o coverage/html
          
      - name: 📊 Upload Coverage
        if: matrix.test-type == 'unit'
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # 🏗️ Build for Multiple Platforms
  build:
    name: 🏗️ Build Apps
    runs-on: ${{ matrix.os }}
    needs: [analyze, test]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: android
            artifact-name: android-apk
          - os: macos-latest
            target: ios
            artifact-name: ios-ipa
          - os: ubuntu-latest
            target: web
            artifact-name: web-build
            
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: ☕ Setup Java (Android)
        if: matrix.target == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: 🔧 Configure Environment
        run: |
          echo "FLUTTER_BUILD_MODE=release" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV
          
      - name: 📱 Build Android APK
        if: matrix.target == 'android'
        run: |
          flutter build apk --release \
            --build-number=${{ env.BUILD_NUMBER }} \
            --dart-define=ENVIRONMENT=production
            
      - name: 🍎 Build iOS IPA
        if: matrix.target == 'ios'
        run: |
          flutter build ios --release --no-codesign \
            --build-number=${{ env.BUILD_NUMBER }} \
            --dart-define=ENVIRONMENT=production
            
      - name: 🌐 Build Web
        if: matrix.target == 'web'
        run: |
          flutter build web --release \
            --build-number=${{ env.BUILD_NUMBER }} \
            --dart-define=ENVIRONMENT=production
            
      - name: 📦 Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/ios/ipa/*.ipa
            build/web/
          retention-days: 30

  # 🔒 Security and Performance Testing
  security:
    name: 🔒 Security & Performance
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🔍 Dependency Security Scan
        uses: securecodewarrior/github-action-add-sarif@v1
        with:
          sarif-file: 'security-scan-results.sarif'
          
      - name: 📊 Performance Baseline
        run: |
          echo "Running performance baseline tests..."
          # Add performance testing commands here
          
      - name: 🚨 Security Alert
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Security Alert: CI/CD Pipeline Failure',
              body: 'Security or performance tests failed in the CI/CD pipeline. Please investigate immediately.',
              labels: ['security', 'critical', 'ci-cd']
            })

  # 🚀 Deployment (only on main branch)
  deploy:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: staging
    steps:
      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: ./build/web/
          
      - name: 🌐 Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: easibites-staging
          channelId: live
          
      - name: 📱 Deploy to App Center (Beta)
        run: |
          echo "Deploying to App Center for beta testing..."
          # Add App Center deployment commands here
          
      - name: 🔔 Notify Team
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              environment_url: 'https://easibites-staging.web.app'
            })

  # 📊 Metrics and Reporting
  metrics:
    name: 📊 Collect Metrics
    runs-on: ubuntu-latest
    if: always()
    needs: [analyze, test, build, security]
    steps:
      - name: 📈 Build Metrics
        run: |
          echo "📊 Pipeline Metrics Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| Analysis | ${{ needs.analyze.result }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "| Testing | ${{ needs.test.result }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security.result }} | - |" >> $GITHUB_STEP_SUMMARY
          
      - name: 📝 Generate Report
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const report = `
            ## 🚨 CI/CD Pipeline Failure Report
            
            **Branch:** ${{ github.ref }}
            **Commit:** ${{ github.sha }}
            **Triggered by:** ${{ github.event_name }}
            
            **Failed Jobs:**
            - Analysis: ${{ needs.analyze.result }}
            - Testing: ${{ needs.test.result }}
            - Build: ${{ needs.build.result }}
            - Security: ${{ needs.security.result }}
            
            Please check the job logs for detailed error information.
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 CI/CD Pipeline Failure',
              body: report,
              labels: ['ci-cd', 'failure', 'needs-attention']
            })